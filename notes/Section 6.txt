SECTION 6: Routing in Angular
====================================
60> Creating some more components

1. In a 3rd promt generate componet members/member-list.

2.Similarly also generate component members/member-details,g c lists,g c messages.

3.In app.routes.ts file add the components paths that the component we created.

import { Routes } from '@angular/router';
import { HomeComponent } from './home/home.component';
import { MemberListComponent } from './members/member-list/member-list.component';
import { MemberDetailComponent } from './members/member-detail/member-detail.component';
import { ListsComponent } from './lists/lists.component';
import { MessagesComponent } from './messages/messages.component';

export const routes: Routes = [
    {path:'',component:HomeComponent},
    {path:'members',component:MemberListComponent},
    {path:'members/:id',component:MemberDetailComponent},
    {path:'lists',component:ListsComponent},
    {path:'messages',component:MessagesComponent},
    {path:'**',component:HomeComponent,pathMatch:'full'},
];

4.Code app.component.html file change from <app-Home></app-Home> to <router-outlet></router-outlet> .it look like that

<app-nav></app-nav>

<div class="container" style="margin-top: 100px;">
<!-- <app-home></app-home> -->
 <router-outlet></router-outlet>

</div>
-------------------------------------------------------
61>Adding the nav link.
1. add changes in navigation link of app.component.html file and it lokk like that

<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
    <div class="container">
      <a class="navbar-brand " routerLink="/"  routerLinkActive="active">DatingApp</a>
      
      @if(accountService.currentUser())
      {
        <ul class="navbar-nav me-auto mb-2 mb-md-0">
          <li class="nav-item">
            <a routerLink="/members" routerLinkActive="active" class="nav-link">Matches</a>
          </li>
          <li class="nav-item">
            <a routerLink="/lists"  routerLinkActive="active" class="nav-link">Lists</a>
          </li>
          <li class="nav-item">
            <a routerLink="/messages"  routerLinkActive="active" class="nav-link">Messages</a>
          </li>
         
         
        </ul>
      } 


      @if(accountService.currentUser())
      {
        <div dropdown class="dropdown">
          <a dropdownToggle class="dropdown-toggle text-light text-decoration-none">Welcome User</a>
          <div *dropdownMenu class="dropdown-menu">
            <a class="dropdown-item">Edit Profile</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" (click)="logout()">Logout</a>

          </div>
        </div>
      }


      @if(!accountService.currentUser())
      {
        <form #loginForm="ngForm" (ngSubmit)="login()" class="d-flex" autocomplete="off">
          <input 
          name="username"
          [(ngModel)]="model.username"
           class="form-control me-2"
            placeholder="Username">

          <input
          name="password"
          [(ngModel)]="model.password"
          class="form-control me-2"
           placeholder="Password" type="password">

          <button class="btn btn-outline-success" type="submit">Login</button>
        </form>
      }

    </div>
  </nav>
2. import routerLink into the file app.component.ts file and it look that

import { Component, inject } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { AccountService } from '../_services/account.service';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { RouterLink, RouterLinkActive } from '@angular/router';


@Component({
  selector: 'app-nav',
  imports: [FormsModule,BsDropdownModule,RouterLink,RouterLinkActive],
  templateUrl: './nav.component.html',
  styleUrl: './nav.component.css'
})
export class NavComponent {
   accountService=inject (AccountService);
  //loggedIn=false;
 
  model:any={};

  login(){
    this.accountService.login(this.model).subscribe({
      next:response=>{
        console.log(response);
       // this.loggedIn=true;

      },
      error:error=>console.log(error)
     
    })
  }

  logout(){
    this.accountService.logout();
  }
}

----------------------------------------------
62>Routing in code

Change the code in nav.component.ts file which look as 

import { Component, inject } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { AccountService } from '../_services/account.service';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { Router, RouterLink, RouterLinkActive } from '@angular/router';


@Component({
  selector: 'app-nav',
  imports: [FormsModule,BsDropdownModule,RouterLink,RouterLinkActive],
  templateUrl: './nav.component.html',
  styleUrl: './nav.component.css'
})
export class NavComponent {
   accountService=inject (AccountService);
   private router=inject (Router);
  //loggedIn=false;
 
  model:any={};

  login(){
    this.accountService.login(this.model).subscribe({
      next:_=>{
       this.router.navigateByUrl('/members')
      },
      error:error=>console.log(error)
     
    })
  }

  logout(){
    this.accountService.logout();
    this.router.navigateByUrl('/');
  }
}
-------------------------------------------------------

63>Adding a toast service for notification.

1.In app.config.ts file add providerToastr().

import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';
import { provideRouter } from '@angular/router';

import { routes } from './app.routes';
import { provideHttpClient } from '@angular/common/http';
import { provideAnimations } from '@angular/platform-browser/animations';
import { provideToastr } from 'ngx-toastr';


export const appConfig: ApplicationConfig = {
  providers: [
    provideZoneChangeDetection({ eventCoalescing: true }),
     provideRouter(routes),
     provideHttpClient(),
     provideAnimations(),
     provideToastr({
      positionClass:'toast-bottom-right'
     })
    ]
};

2.Inject toaster service with some other code in login() in nav.component.ts file and finaly it look as

import { Component, inject } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { AccountService } from '../_services/account.service';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { Router, RouterLink, RouterLinkActive } from '@angular/router';
import { ToastrService } from 'ngx-toastr';


@Component({
  selector: 'app-nav',
  imports: [FormsModule,BsDropdownModule,RouterLink,RouterLinkActive],
  templateUrl: './nav.component.html',
  styleUrl: './nav.component.css'
})
export class NavComponent {
   accountService=inject (AccountService);
   private router=inject (Router);
   private toastr=inject(ToastrService);
  //loggedIn=false;
 
  model:any={};

  login(){
    this.accountService.login(this.model).subscribe({
      next:_=>{
       this.router.navigateByUrl('/members')
      },
      error:error=>this.toastr.error(error.error)
     
    })
  }

  logout(){
    this.accountService.logout();
    this.router.navigateByUrl('/');
  }
}

3.Do similarly in register.component.ts file

import { Component, inject, input, output } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { AccountService } from '../_services/account.service';
import { ToastrService } from 'ngx-toastr';

@Component({
  selector: 'app-register',
  imports: [FormsModule],
  templateUrl: './register.component.html',
  styleUrl: './register.component.css'
})
export class RegisterComponent {
  private accountService=inject(AccountService);
  private toastr=inject(ToastrService);
//  usersFromHomeComponent=input.required<any>()
  //@Input() usersFromHomeComponent:any;

  // @Output() cancelRegister=new EventEmitter();
   cancelRegister=output<boolean>();

 
  model:any={};

  register(){
    this.accountService.register(this.model).subscribe({
      next:response=>{
        console.log(response);
      this.cancel();
    },
     error:error=>this.toastr.error(error.error)
  })
     
  
  }

  cancel(){
    this.cancelRegister.emit(false);
  }
}

4.very important add following code in angular.json file

 "styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/font-awesome/css/font-awesome.min.css",
               "node_modules/ngx-toastr/toastr.css",
              "src/styles.css"
            ],
-------------------------------------------------------------------------
64>Adding an angular route guard.
3rd prompt
client>ng g g _guards/auth 

1. write the code in auth.guard.ts file

import { CanActivateFn } from '@angular/router';
import { AccountService } from '../_services/account.service';
import { inject } from '@angular/core';
import { ToastrService } from 'ngx-toastr';

export const authGuard: CanActivateFn = (route, state) => {
  const accountService=inject(AccountService);
  const toastr=inject(ToastrService);

  if(accountService.currentUser()){
    return true;
  } else{
    toastr.error('you shall not pass!');
    return false;
  }

};

2.change code in app.routes.ts file in 2nd path 
import { Routes } from '@angular/router';
import { HomeComponent } from './home/home.component';
import { MemberListComponent } from './members/member-list/member-list.component';
import { MemberDetailComponent } from './members/member-detail/member-detail.component';
import { ListsComponent } from './lists/lists.component';
import { MessagesComponent } from './messages/messages.component';
import { authGuard } from './_guards/auth.guard';

export const routes: Routes = [
    {path:'',component:HomeComponent},
    {path:'members',component:MemberListComponent,canActivate:[authGuard]},
    {path:'members/:id',component:MemberDetailComponent},
    {path:'lists',component:ListsComponent},
    {path:'messages',component:MessagesComponent},
    {path:'**',component:HomeComponent,pathMatch:'full'},
];

3.In nav.component.html file replace true with 1st accountService.currentUser() of @if statement.

<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
    <div class="container">
      <a class="navbar-brand " routerLink="/"  routerLinkActive="active">DatingApp</a>
      
      @if(true)
      {
        <ul class="navbar-nav me-auto mb-2 mb-md-0">
          <li class="nav-item">
            <a routerLink="/members" routerLinkActive="active" class="nav-link">Matches</a>
          </li>
          <li class="nav-item">
            <a routerLink="/lists"  routerLinkActive="active" class="nav-link">Lists</a>
          </li>
          <li class="nav-item">
            <a routerLink="/messages"  routerLinkActive="active" class="nav-link">Messages</a>
          </li>
         
         
        </ul>
      } 


      @if(accountService.currentUser())
      {
        <div dropdown class="dropdown">
          <a dropdownToggle class="dropdown-toggle text-light text-decoration-none">Welcome User</a>
          <div *dropdownMenu class="dropdown-menu">
            <a class="dropdown-item">Edit Profile</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" (click)="logout()">Logout</a>

          </div>
        </div>
      }


      @if(!accountService.currentUser())
      {
        <form #loginForm="ngForm" (ngSubmit)="login()" class="d-flex" autocomplete="off">
          <input 
          name="username"
          [(ngModel)]="model.username"
           class="form-control me-2"
            placeholder="Username">

          <input
          name="password"
          [(ngModel)]="model.password"
          class="form-control me-2"
           placeholder="Password" type="password">

          <button class="btn btn-outline-success" type="submit">Login</button>
        </form>
      }

    </div>
  </nav>
-------------------------------------------------------------------------------
65>Adding a dummy route 

1. In a app.route.ts file add path which look finally as falows

import { Routes } from '@angular/router';
import { HomeComponent } from './home/home.component';
import { MemberListComponent } from './members/member-list/member-list.component';
import { MemberDetailComponent } from './members/member-detail/member-detail.component';
import { ListsComponent } from './lists/lists.component';
import { MessagesComponent } from './messages/messages.component';
import { authGuard } from './_guards/auth.guard';

export const routes: Routes = [
    {path:'',component:HomeComponent},
    {
        path:'',
        runGuardsAndResolvers:'always',
        canActivate:[authGuard],
        children:
        [
            {path:'members',component:MemberListComponent},
            {path:'members/:id',component:MemberDetailComponent},
            {path:'lists',component:ListsComponent},
            {path:'messages',component:MessagesComponent},
        ]
    },
   
    {path:'**',component:HomeComponent,pathMatch:'full'},
];

2. changes first 21 line code in nav.c.html file as fallows

<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
    <div class="container">
      <a class="navbar-brand " routerLink="/"  routerLinkActive="active">DatingApp</a>
      
     
        <ul class="navbar-nav me-auto mb-2 mb-md-0">
          @if(accountService.currentUser())
          {
          <li class="nav-item">
            <a routerLink="/members" routerLinkActive="active" class="nav-link">Matches</a>
          </li>
          <li class="nav-item">
            <a routerLink="/lists"  routerLinkActive="active" class="nav-link">Lists</a>
          </li>
          <li class="nav-item">
            <a routerLink="/messages"  routerLinkActive="active" class="nav-link">Messages</a>
          </li>
        }
        </ul>
       


      @if(accountService.currentUser())
      {
        <div dropdown class="dropdown">
          <a dropdownToggle class="dropdown-toggle text-light text-decoration-none">Welcome User</a>
          <div *dropdownMenu class="dropdown-menu">
            <a class="dropdown-item">Edit Profile</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" (click)="logout()">Logout</a>

          </div>
        </div>
      }


      @if(!accountService.currentUser())
      {
        <form #loginForm="ngForm" (ngSubmit)="login()" class="d-flex" autocomplete="off">
          <input 
          name="username"
          [(ngModel)]="model.username"
           class="form-control me-2"
            placeholder="Username">

          <input
          name="password"
          [(ngModel)]="model.password"
          class="form-control me-2"
           placeholder="Password" type="password">

          <button class="btn btn-outline-success" type="submit">Login</button>
        </form>
      }

    </div>
  </nav>
------------------------------------------------------------------------------------
66> Adding a new theme
1. Install npm i bootswatch from 3rd prompt
2. In a angular.json file, inside of "style" add code of bootswash as fallows

 "styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "node_modules/font-awesome/css/font-awesome.min.css",
              "node_modules/bootswatch/dist/united/bootstrap.min.css",
              "node_modules/ngx-toastr/toastr.css",
              "src/styles.css"
            ],
3.Changes code in nav.c.html file as fallows

<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-primary">
    <div class="container">
      <a class="navbar-brand " routerLink="/"  routerLinkActive="active">DatingApp</a>
      
     
        <ul class="navbar-nav me-auto mb-2 mb-md-0">
          @if(accountService.currentUser())
          {
          <li class="nav-item">
            <a routerLink="/members" routerLinkActive="active" class="nav-link">Matches</a>
          </li>
          <li class="nav-item">
            <a routerLink="/lists"  routerLinkActive="active" class="nav-link">Lists</a>
          </li>
          <li class="nav-item">
            <a routerLink="/messages"  routerLinkActive="active" class="nav-link">Messages</a>
          </li>
        }
        </ul>
       


      @if(accountService.currentUser())
      {
        <div dropdown class="dropdown">
          <a dropdownToggle class="dropdown-toggle text-light text-decoration-none">
            Welcome {{accountService.currentUser()?.username | titlecase}}
          </a>
          <div *dropdownMenu class="dropdown-menu">
            <a class="dropdown-item">Edit Profile</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" (click)="logout()">Logout</a>

          </div>
        </div>
      }


      @if(!accountService.currentUser())
      {
        <form #loginForm="ngForm" (ngSubmit)="login()" class="d-flex" autocomplete="off">
          <input 
          name="username"
          [(ngModel)]="model.username"
           class="form-control me-2"
            placeholder="Username">

          <input
          name="password"
          [(ngModel)]="model.password"
          class="form-control me-2"
           placeholder="Password" type="password">

          <button class="btn btn-success" type="submit">Login</button>
        </form>
      }

    </div>
  </nav>

4.In a vav.c.ts file add titlecase pipe,then the code is look like as 

import { Component, inject } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { AccountService } from '../_services/account.service';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { Router, RouterLink, RouterLinkActive } from '@angular/router';
import { ToastrService } from 'ngx-toastr';
import { TitleCasePipe } from '@angular/common';


@Component({
  selector: 'app-nav',
  imports: [FormsModule,BsDropdownModule,RouterLink,RouterLinkActive,TitleCasePipe],
  templateUrl: './nav.component.html',
  styleUrl: './nav.component.css'
})
export class NavComponent {
   accountService=inject (AccountService);
   private router=inject (Router);
   private toastr=inject(ToastrService);
  //loggedIn=false;
 
  model:any={};

  login(){
    this.accountService.login(this.model).subscribe({
      next:_=>{
       this.router.navigateByUrl('/members')
      },
      error:error=>this.toastr.error(error.error)
     
    })
  }

  logout(){
    this.accountService.logout();
    this.router.navigateByUrl('/');
  }
}
----------------------------------------------------------------------------------------

